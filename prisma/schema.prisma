generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  username String  @unique
  password String
  avatarId String? @db.ObjectId
  role     Role
  avatar   Avatar? @relation(fields: [avatarId], references: [id])
}

model Space {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  width     Int
  height    Int?
  mapId     String? @unique
  thumbnail String?
  elements  spaceElements[]
}

model spaceElements {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  elementId String @db.ObjectId
  spaceId   String @db.ObjectId
  x         Int
  y         Int
  space     Space @relation(fields: [spaceId], references: [id])
  element   Element @relation(fields: [elementId], references: [id])
}

model Element {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  width    Int
  height   Int
  imageUrl String
  static Boolean
  spaces   spaceElements[]
  mapElements mapElements[]
}

model Map {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  width  Int
  height Int
  name   String
  thumbnail String?
  elements mapElements[]
}

model mapElements {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  mapId     String @db.ObjectId
  elementId String? @db.ObjectId
  x         Int?
  y         Int?
  map       Map @relation(fields: [mapId], references: [id])
  element   Element? @relation(fields: [elementId], references: [id])
}

model Avatar {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl String?
  name     String?
  users    User[]
}

enum Role {
  Admin
  User
}